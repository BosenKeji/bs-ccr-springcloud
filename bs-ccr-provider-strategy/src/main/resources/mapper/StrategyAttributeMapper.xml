<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.cn.bosenkeji.mapper.StrategyAttributeMapper">
  <resultMap id="BaseResultMap" type="cn.bosenkeji.vo.StrategyAttribute">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="strategy_id" jdbcType="INTEGER" property="strategyId" />
    <result column="is_default" jdbcType="TINYINT" property="isDefault" />
    <result column="is_tip" jdbcType="TINYINT" property="isTip" />
    <result column="lever" jdbcType="INTEGER" property="lever" />
    <result column="strategy_sequence_id" jdbcType="INTEGER" property="strategySequenceId" />
    <result column="rate" jdbcType="INTEGER" property="rate" />
    <result column="stop_profit_ratio" jdbcType="TINYINT" property="stopProfitRatio" />
    <result column="is_stop_profit_trace" jdbcType="TINYINT" property="isStopProfitTrace" />
    <result column="stop_profit_trace_trigger_rate" jdbcType="TINYINT" property="stopProfitTraceTriggerRate" />
    <result column="stop_profit_trace_drop_rate" jdbcType="TINYINT" property="stopProfitTraceDropRate" />
    <result column="is_stop_profit_money" jdbcType="TINYINT" property="isStopProfitMoney" />
    <result column="is_stop_profit_grid" jdbcType="TINYINT" property="isStopProfitGrid" />
    <result column="build_reference" jdbcType="TINYINT" property="buildReference" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, strategy_id, is_default, is_tip, lever, strategy_sequence_id, rate, stop_profit_ratio,
    is_stop_profit_trace, stop_profit_trace_trigger_rate, stop_profit_trace_drop_rate, 
    is_stop_profit_money, is_stop_profit_grid, build_reference, status, created_at, updated_at
  </sql>


  <select id="getStrategyAttributeByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from strategy_attribute
    where id = #{id}
  </select>

  <select id="getLevelByStrategyId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    select lever from strategy_attribute where strategy_id = #{strategyId}
  </select>

  <select id="getStrategyAttributeByStrategyId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from strategy_attribute
    where strategy_id = #{strategyId}
  </select>

</mapper>