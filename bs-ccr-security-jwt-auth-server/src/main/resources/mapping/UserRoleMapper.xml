<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.bosenkeji.mapper.UserRoleMapper" >
  <resultMap id="BaseResultMap" type="cn.bosenkeji.vo.permission.UserRole" >
    <constructor >
      <arg column="id" jdbcType="INTEGER" javaType="_int" />
      <arg column="user_id" jdbcType="INTEGER" javaType="_int" />
      <arg column="role_id" jdbcType="BIGINT" javaType="_int" />
      <arg column="user_type" jdbcType="TINYINT" javaType="_int" />
      <arg column="status" jdbcType="TINYINT" javaType="_int" />
      <arg column="created_at" jdbcType="TIMESTAMP" javaType="java.sql.Timestamp" />
      <arg column="updated_at" jdbcType="TIMESTAMP" javaType="java.sql.Timestamp" />
    </constructor>
  </resultMap>

  <sql id="Base_Column_List">id, user_id, role_id, user_type, status, created_at, updated_at</sql>

  <insert id="insert" parameterType="cn.bosenkeji.vo.permission.UserRole" >
    <selectKey resultType="int" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user_role (user_id, role_id, user_type, 
      status, created_at, updated_at
      )
    values (#{userId,jdbcType=INTEGER}, #{roleId,jdbcType=BIGINT}, #{userType,jdbcType=TINYINT}, 
      #{status,jdbcType=TINYINT}, #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.bosenkeji.vo.permission.UserRole" >
    <selectKey resultType="int" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user_role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="userType != null" >
        user_type,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createdAt != null" >
        created_at,
      </if>
      <if test="updatedAt != null" >
        updated_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="userType != null" >
        #{userType,jdbcType=TINYINT},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createdAt != null" >
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null" >
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateBySelective" parameterType="cn.bosenkeji.vo.permission.UserRole" >
    update user_role
    <set >
      <if test="userRole.id != null" >
        id = #{userRole.id,jdbcType=INTEGER},
      </if>
      <if test="userRole.userId != null" >
        user_id = #{userRole.userId,jdbcType=INTEGER},
      </if>
      <if test="userRole.roleId != null" >
        role_id = #{userRole.roleId,jdbcType=BIGINT},
      </if>
      <if test="userRole.userType != null" >
        user_type = #{userRole.userType,jdbcType=TINYINT},
      </if>
      <if test="userRole.status != null" >
        status = #{userRole.status,jdbcType=TINYINT},
      </if>
      <if test="userRole.updatedAt != null" >
        updated_at = #{userRole.updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id}
  </update>
  <update id="update" parameterType="cn.bosenkeji.vo.permission.UserRole" >
    update user_role
    set id = #{userRole.id,jdbcType=INTEGER},
      user_id = #{userRole.userId,jdbcType=INTEGER},
      role_id = #{userRole.roleId,jdbcType=BIGINT},
      user_type = #{userRole.userType,jdbcType=TINYINT},
      status = #{userRole.status,jdbcType=TINYINT},
      updated_at = #{userRole.updatedAt,jdbcType=TIMESTAMP}
    where id = #{id}
  </update>

  <select id="getUserRoleById" parameterType="int" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user_role
    where id = #{id}
  </select>

  <select id="listUserRole" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user_role
  </select>

  <select id="listUserRoleByUserIdAndType" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user_role
    where user_id = #{userId} and user_type = #{type}
  </select>

</mapper>