<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.bosenkeji.mapper.CoinPairChoiceAttributeMapper">
  <resultMap id="BaseResultMap" type="cn.bosenkeji.vo.transaction.CoinPairChoiceAttribute">
    <!--@mbg.generated-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="coin_pair_choice_id" jdbcType="INTEGER" property="coinPairChoiceId" />
    <result column="expect_money" jdbcType="INTEGER" javaType="double" property="expectMoney" />
    <result column="strategy_id" jdbcType="INTEGER" property="strategyId" />
    <result column="is_custom" jdbcType="TINYINT" property="isCustom" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, coin_pair_choice_id, expect_money, strategy_id, is_custom, `status`, created_at,
    updated_at
  </sql>
<select id="findAllCoinPartnerChoiceId" resultType="integer">
  select coin_pair_choice_id from coin_pair_choice_attribute
</select>
  <select id="findSectionCoinPairChoiceAttributeByCoinPartnerChoiceIds" parameterType="list" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
   from coin_pair_choice_attribute
   where coin_pair_choice_id in
   <foreach collection="list" index="index" item="item"  open="(" separator="," close=")">
     #{item,jdbcType=INTEGER}
   </foreach>
  </select>

  <select id="findAllCoinPairChoiceId" resultType="integer">
    select coin_pair_choice_id from coin_pair_choice_attribute
  </select>

  <select id="checkByCoinPartnerChoiceId" resultType="integer">
    select exists (select 1 from coin_pair_choice_attribute where coin_pair_choice_id =#{coinPairChoiceId} limit 1)
  </select>
  <select id="selectByCoinPartnerChoiceId" parameterType="int" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
   from coin_pair_choice_attribute
   where coin_pair_choice_id = #{coinPairChoiceId,jdbcType=INTEGER}
  </select>
  <select id="selectByPrimaryKey" parameterType="int" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from coin_pair_choice_attribute
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="int">
    <!--@mbg.generated-->
    delete from coin_pair_choice_attribute
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <delete id="batchDelete" parameterType="list">
    delete from coin_pair_choice_attribute
    where coin_pair_choice_id in
    <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
      #{item,jdbcType=INTEGER}
    </foreach>
  </delete>

  <delete id="deleteByCoinPairChoiceId" parameterType="int">
    <!--@mbg.generated-->
    delete from coin_pair_choice_attribute
    where coin_pair_choice_id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="cn.bosenkeji.vo.transaction.CoinPairChoiceAttribute" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into coin_pair_choice_attribute (coin_pair_choice_id, expect_money,
      strategy_id, is_custom, `status`, 
      created_at, updated_at)
    values (#{coinPairChoiceId,jdbcType=INTEGER}, #{expectMoney,jdbcType=INTEGER},
      #{strategyId,jdbcType=INTEGER}, #{isCustom,jdbcType=TINYINT}, #{status,jdbcType=TINYINT}, 
      #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="cn.bosenkeji.vo.transaction.CoinPairChoiceAttribute" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into coin_pair_choice_attribute
    <trim prefix="(" suffix=")" suffixOverrides=",">
      coin_pair_choice_id,
      expect_money,
      strategy_id,
      is_custom,
      `status`,
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">

      #{coinPairChoiceId,jdbcType=INTEGER},
      #{expectMoney,jdbcType=INTEGER},
      #{strategyId,jdbcType=INTEGER},
      #{isCustom,jdbcType=TINYINT},
      #{status,jdbcType=TINYINT},
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.bosenkeji.vo.transaction.CoinPairChoiceAttribute">
    <!--@mbg.generated-->
    update coin_pair_choice_attribute
    <set>
      <if test="coinPairChoiceId > 0">
        coin_pair_choice_id = #{coinPairChoiceId,jdbcType=INTEGER},
      </if>
      <if test="expectMoney >= 0">
        expect_money = #{expectMoney,jdbcType=INTEGER},
      </if>
      <if test="strategyId > 0">
        strategy_id = #{strategyId,jdbcType=INTEGER},
      </if>
      <if test="isCustom >= 0">
        is_custom = #{isCustom,jdbcType=TINYINT},
      </if>
      <if test="status == 0">
        `status` = #{status,jdbcType=TINYINT},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="updateByCoinPartnerChoiceIdSelective" parameterType="cn.bosenkeji.vo.transaction.CoinPairChoiceAttribute">
    <!--@mbg.generated-->
    update coin_pair_choice_attribute
    <set>
      <if test="coinPairChoiceId > 0">
        coin_pair_choice_id = #{coinPairChoiceId,jdbcType=INTEGER},
      </if>
      <if test="expectMoney > 0">
        expect_money = #{expectMoney,jdbcType=INTEGER},
      </if>
      <if test="strategyId > 0">
        strategy_id = #{strategyId,jdbcType=INTEGER},
      </if>
      <if test="isCustom >= 0">
        is_custom = #{isCustom,jdbcType=TINYINT},
      </if>
      <if test="status == 1">
        `status` = #{status,jdbcType=TINYINT},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where coin_pair_choice_id = #{id,jdbcType=INTEGER}
  </update>

  <update id="updateByPrimaryKey" parameterType="cn.bosenkeji.vo.transaction.CoinPairChoiceAttribute">
    <!--@mbg.generated-->
    update coin_pair_choice_attribute
    set coin_pair_choice_id = #{coinPairChoiceId,jdbcType=INTEGER},
      expect_money = #{expectMoney,jdbcType=INTEGER},
      strategy_id = #{strategyId,jdbcType=INTEGER},
      is_custom = #{isCustom,jdbcType=TINYINT},
      `status` = #{status,jdbcType=TINYINT},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where coin_pair_choice_id = #{id,jdbcType=INTEGER}
  </update>
</mapper>