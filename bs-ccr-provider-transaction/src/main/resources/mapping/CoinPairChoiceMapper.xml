<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.bosenkeji.mapper.CoinPairChoiceMapper">
  <resultMap id="BaseResultMap" type="cn.bosenkeji.vo.transaction.CoinPairChoice">
    <!--@mbg.generated-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="coin_partner_id" jdbcType="INTEGER" property="coinPartnerId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="is_start" jdbcType="TINYINT" property="isStart" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
    <result column="trade_platform_api_bind_product_combo_id" jdbcType="INTEGER" property="tradePlatformApiBindProductComboId"/>

    <association fetchType="lazy" property="coinPairChoiceAttribute" javaType="cn.bosenkeji.vo.transaction.CoinPairChoiceAttribute"
                 column="id"
                 select="cn.bosenkeji.mapper.CoinPairChoiceAttributeMapper.selectByCoinPartnerChoiceId"/>

    <association fetchType="lazy" property="coinPairChoiceAttributeCustom" javaType="cn.bosenkeji.vo.transaction.CoinPairChoiceAttributeCustom"
                 column="id" select="cn.bosenkeji.mapper.CoinPairChoiceAttributeCustomMapper.selectByCoinPartnerChoiceId"/>

    <!--<association fetchType="lazy" property="coinPair" javaType="cn.bosenkeji.vo.coin.CoinPair"-->
                 <!--column="coin_partner_id" select="cn.bosenkeji.mapper.CoinPairMapper.selectByPrimaryKey"/>-->

  </resultMap>

  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, coin_partner_id, user_id, is_start, `status`, created_at, updated_at,trade_platform_api_bind_product_combo_id
  </sql>
  <select id="selectIdByCoinPartnerIdAndRobotIdAndStatus" resultType="integer">
    select id from coin_pair_choice where coin_partner_id = #{param1} and trade_platform_api_bind_product_combo_id = #{param2} and status = 0
  </select>
  <select id="checkExistByCoinPartnerIdAndRobotIdAndStatus" resultType="integer">
    select exists (SELECT 1 FROM coin_pair_choice WHERE coin_partner_id = #{param1} and trade_platform_api_bind_product_combo_id =#{param2}  and status = 1 LIMIT 1)
  </select>
  <select id="findAllCoinPairChoiceId" resultType="integer">
    select id from coin_pair_choice  where status = 1
  </select>
  <select id="findAllByTradePlatformApiBindProductComboId" parameterType="integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
   from coin_pair_choice
   where trade_platform_api_bind_product_combo_id = #{tradePlatformApiBindProductComboId,jdbcType=INTEGER} and status = 1
  </select>
  <select id="selectByPrimaryKey" parameterType="int" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <include refid="Base_Column_List"/>
   from coin_pair_choice
    where id = #{id,jdbcType=INTEGER} and status = 1
  </select>

  <select id="findAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from coin_pair_choice where status = 1
  </select>

  <delete id="deleteByPrimaryKey" parameterType="int">
    <!--@mbg.generated-->
    delete from coin_pair_choice
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="batchDelete" parameterType="List">
    delete from coin_pair_choice
    where id in
    <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
      #{item,jdbcType=INTEGER}
    </foreach>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="cn.bosenkeji.vo.transaction.CoinPairChoice" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into coin_pair_choice (coin_partner_id, user_id, is_start,
      `status`, created_at, updated_at,trade_platform_api_bind_product_combo_id
      )
    values (#{coinPartnerId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{isStart,jdbcType=TINYINT}, 
      #{status,jdbcType=TINYINT}, #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP},#{tradePlatformApiBindProductComboId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="cn.bosenkeji.vo.transaction.CoinPairChoice" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into coin_pair_choice
    <trim prefix="(" suffix=")" suffixOverrides=",">
      coin_partner_id,
      user_id,
      is_start,
      `status`,
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
      <if test="tradePlatformApiBindProductComboId > 0">
        trade_platform_api_bind_product_combo_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{coinPartnerId,jdbcType=INTEGER},
      #{userId,jdbcType=INTEGER},
      #{isStart,jdbcType=TINYINT},
      #{status,jdbcType=TINYINT},
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="tradePlatformApiBindProductComboId > 0">
        #{tradePlatformApiBindProductComboId,jdbcType=INTEGER}
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.bosenkeji.vo.transaction.CoinPairChoice">
    <!--@mbg.generated-->
    update coin_pair_choice
    <set>
      <if test="coinPartnerId > 0">
        coin_partner_id = #{coinPartnerId,jdbcType=INTEGER},
      </if>
      <if test="userId > 0">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="isStart > 0">
        is_start = #{isStart,jdbcType=TINYINT},
      </if>
      <if test="status == 1">
        `status` = #{status,jdbcType=TINYINT},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="tradePlatformApiBindProductComboId > 0">
        trade_platform_api_bind_product_combo_id = #{tradePlatformApiBindProductComboId,jdbcType=INTEGER}
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER} and status = 1
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.bosenkeji.vo.transaction.CoinPairChoice">
    <!--@mbg.generated-->
    update coin_pair_choice
    set coin_partner_id = #{coinPartnerId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      is_start = #{isStart,jdbcType=TINYINT},
      `status` = #{status,jdbcType=TINYINT},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
    trade_platform_api_bind_product_combo_id = #{tradePlatformApiBindProductComboId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER} and status = 1
  </update>

  <update id="updateStatusByPrimaryKey" >
    update coin_pair_choice
    set `status` = #{param3,jdbcType=INTEGER},
    updated_at = #{param2,jdbcType=TIMESTAMP}
    where id = #{param1,jdbcType=INTEGER}
  </update>
  <update id="batchUpdateStatusByPrimaryKey" >
    update coin_pair_choice
    set `status` = 0,
    updated_at = #{param2,jdbcType=TIMESTAMP}
    where id in
    <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
      #{item,jdbcType=INTEGER}
    </foreach>
  </update>
</mapper>