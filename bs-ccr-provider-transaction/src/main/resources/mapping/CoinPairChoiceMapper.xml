<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.bosenkeji.mapper.CoinPairChoiceMapper">
  <resultMap id="BaseResultMap" type="cn.bosenkeji.vo.transaction.CoinPairChoice">
    <!--@mbg.generated-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="coin_partner_id" jdbcType="INTEGER" property="coinPartnerId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="is_start" jdbcType="TINYINT" property="isStart" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />

    <association property="coinPairChoiceAttribute" javaType="cn.bosenkeji.vo.transaction.CoinPairChoiceAttribute">
      <id column="cpcaid" property="id"/>
      <result column="expect_money" property="expectMoney"/>
      <result column="strategy_id" property="strategyId"/>
      <result column="cpcastatus" property="status"/>
      <result column="is_custom" property="isCustom"/>
      <result column="coin_partner_choice_id" property="coinPartnerChoiceId"/>
      <result column="cpcacreatedat" property="createdAt"/>
      <result column="cpcaupdatedat" property="updatedAt"/>
    </association>

    <association property="coinPairChoiceAttributeCustom" javaType="cn.bosenkeji.vo.transaction.CoinPairChoiceAttributeCustom">
      <id column="cpcacid" property="id"/>
      <result column="stop_profit_type" property="stopProfitType"/>
      <result column="stop_profit_money" property="stopProfitMoney"/>
      <result column="stop_profit_trace_trigger_rate" property="stopProfitTraceTriggerRate"/>
      <result column="stop_profit_trace_drop_rate" property="stopProfitTraceDropRate"/>
      <result column="stop_profit_fixed_rate" property="stopProfitFixedRate"/>
      <result column="cpcacstatus" property="status"/>
      <result column="cpcaccreatedat" property="createdAt"/>
      <result column="cpcacupdatedat" property="updatedAt"/>
    </association>

    <association property="coinPair" javaType="cn.bosenkeji.vo.coin.CoinPair">
      <id column="cpId" property="id"/>
      <result column="cpName" property="name"/>
    </association>

  </resultMap>

    <resultMap id="Coin_Pair_Choice_Join_Coin_Pair" type="cn.bosenkeji.vo.transaction.CoinPairChoiceJoinCoinPair">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="user_id" jdbcType="INTEGER" property="userId" />
        <result column="is_start" jdbcType="TINYINT" property="isStart" />
        <result column="status" jdbcType="TINYINT" property="status" />
        <result column="coin_partner_id" jdbcType="INTEGER" property="coinPartnerId" />
        <result column="name" jdbcType="VARCHAR" property="coinPairName" />
    </resultMap>

  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, coin_partner_id, user_id, is_start, `status`, created_at, updated_at
  </sql>
  <select id="checkExistByCoinPartnerIdAndUserId" resultType="integer">
    select exists (SELECT 1 FROM coin_pair_choice WHERE coin_partner_id = #{param1} and user_id=#{param2}  LIMIT 1)
  </select>
  <select id="findAll" parameterType="integer" resultMap="BaseResultMap">
    select
    cpc.id,
    cpc.coin_partner_id,
    cpc.user_id,
    cpc.is_start,
    cpc.status,
    cpc.created_at,
    cpc.updated_at,
    cpca.id 'cpcaid',
    cpca.coin_partner_choice_id,
    cpca.expect_money,
    cpca.strategy_id,
    cpca.is_custom,
    cpca.status 'cpcastatus',
    cpca.created_at 'cpcacreatedat',
    cpca.updated_at 'cpcaupdatedat',
    cpcac.id 'cpcacid',
    cpcac.coin_partner_choice_id,
    cpcac.stop_profit_type,
    cpcac.stop_profit_money,
    cpcac.stop_profit_trace_trigger_rate,
    cpcac.stop_profit_trace_drop_rate,
    cpcac.stop_profit_fixed_rate,
    cpcac.status 'cpcacstatus',
    cpcac.created_at 'cpcaccreatedat',
    cpcac.updated_at 'cpcacupdatedat',
    cp.id 'cpId',
    cp.name 'cpName'
    from coin_pair_choice cpc left join coin_pair_choice_attribute cpca on cpc.id = cpca.coin_partner_choice_id
    left join coin_pair_choice_attribute_custom  cpcac on cpc.id = cpcac.coin_partner_choice_id
    left join   coin_pair_coin cpcoin ON cpc.coin_partner_id=cpcoin.coin_pair_id
    LEFT JOIN coin_pair cp ON cpcoin.coin_pair_id=cp.id
    WHERE cpc.user_id=#{param1}  AND cpcoin.coin_id=#{param2}
  </select>
  <select id="selectByPrimaryKey" parameterType="int" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    cpc.id,
    cpc.coin_partner_id,
    cpc.user_id,
    cpc.is_start,
    cpc.status,
    cpc.created_at,
    cpc.updated_at,
    cpca.id 'cpcaid',
    cpca.coin_partner_choice_id,
    cpca.expect_money,
    cpca.strategy_id,
    cpca.is_custom,
    cpca.status 'cpcastatus',
    cpca.created_at 'cpcacreatedat',
    cpca.updated_at 'cpcaupdatedat',
    cpcac.id 'cpcacid',
    cpcac.coin_partner_choice_id,
    cpcac.stop_profit_type,
    cpcac.stop_profit_money,
    cpcac.stop_profit_trace_trigger_rate,
    cpcac.stop_profit_trace_drop_rate,
    cpcac.stop_profit_fixed_rate,
    cpcac.status 'cpcacstatus',
    cpcac.created_at 'cpcaccreatedat',
    cpcac.updated_at 'cpcacupdatedat'
    from coin_pair_choice cpc left join coin_pair_choice_attribute cpca on cpc.id = cpca.coin_partner_choice_id
    left join coin_pair_choice_attribute_custom  cpcac on cpc.id = cpcac.coin_partner_choice_id
    where cpc.id = #{id,jdbcType=INTEGER}
  </select>

  <select id="listCoinPairChoice" resultMap="Coin_Pair_Choice_Join_Coin_Pair">
    select cpc.id,user_id,is_start,cpc.status,coin_partner_id,name
    from coin_pair_choice cpc
    join coin_pair cp
    on cpc.coin_partner_id = cp.id
  </select>

  <delete id="deleteByPrimaryKey" parameterType="int">
    <!--@mbg.generated-->
    delete from coin_pair_choice
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="cn.bosenkeji.vo.transaction.CoinPairChoice" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into coin_pair_choice (coin_partner_id, user_id, is_start,
      `status`, created_at, updated_at
      )
    values (#{coinPartnerId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{isStart,jdbcType=TINYINT}, 
      #{status,jdbcType=TINYINT}, #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="cn.bosenkeji.vo.transaction.CoinPairChoice" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into coin_pair_choice
    <trim prefix="(" suffix=")" suffixOverrides=",">
      coin_partner_id,
      user_id,
      is_start,
      `status`,
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{coinPartnerId,jdbcType=INTEGER},
      #{userId,jdbcType=INTEGER},
      #{isStart,jdbcType=TINYINT},
      #{status,jdbcType=TINYINT},
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.bosenkeji.vo.transaction.CoinPairChoice">
    <!--@mbg.generated-->
    update coin_pair_choice
    <set>
      <if test="coinPartnerId != 0">
        coin_partner_id = #{coinPartnerId,jdbcType=INTEGER},
      </if>
      <if test="userId != 0">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="isStart != 0">
        is_start = #{isStart,jdbcType=TINYINT},
      </if>
      <if test="status != 0">
        `status` = #{status,jdbcType=TINYINT},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.bosenkeji.vo.transaction.CoinPairChoice">
    <!--@mbg.generated-->
    update coin_pair_choice
    set coin_partner_id = #{coinPartnerId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      is_start = #{isStart,jdbcType=TINYINT},
      `status` = #{status,jdbcType=TINYINT},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>