<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.bosenkeji.mapper.TradePlatformApiBindProductComboMapper">


  <resultMap id="BaseResultMap" type="cn.bosenkeji.vo.tradeplatform.TradePlatformApiBindProductCombo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="trade_platform_api_id" jdbcType="INTEGER" property="tradePlatformApiId" />
    <result column="user_product_combo_id" jdbcType="INTEGER" property="userProductComboId" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
    <association property="tradePlatformApi" column="trade_platform_api_id" javaType="cn.bosenkeji.vo.tradeplatform.TradePlatformApi"
                 select="cn.bosenkeji.mapper.TradePlatformApiMapper.selectByPrimaryKey" />
  </resultMap>

  <resultMap id="NoApiResultMap" type="cn.bosenkeji.vo.tradeplatform.TradePlatformApiBindProductCombo">
  <id column="id" jdbcType="INTEGER" property="id" />
  <result column="user_id" jdbcType="INTEGER" property="userId" />
  <result column="trade_platform_api_id" jdbcType="INTEGER" property="tradePlatformApiId" />
  <result column="user_product_combo_id" jdbcType="INTEGER" property="userProductComboId" />
  <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
  <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
  </resultMap>

  <resultMap id="ApiResultMap" type="cn.bosenkeji.vo.tradeplatform.TradePlatformApi">
    <!--@mbg.generated-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="trade_platform_id" jdbcType="INTEGER" property="tradePlatformId" />
    <result column="sign" jdbcType="VARCHAR" property="sign" />
    <result column="access_key" jdbcType="VARCHAR" property="accessKey" />
    <result column="secret_key" jdbcType="VARCHAR" property="secretKey" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, trade_platform_api_id, user_product_combo_id, created_at, updated_at
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from trade_platform_api_bind_product_combo
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from trade_platform_api_bind_product_combo
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByComboId" parameterType="java.lang.Integer">
    delete from trade_platform_api_bind_product_combo
    where user_product_combo_id=#{userProductComboId}
  </delete>
  <insert id="insert" parameterType="cn.bosenkeji.vo.tradeplatform.TradePlatformApiBindProductCombo">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into trade_platform_api_bind_product_combo (user_id, trade_platform_api_id, user_product_combo_id, 
      created_at, updated_at)
    values (#{userId,jdbcType=INTEGER}, #{tradePlatformApiId,jdbcType=INTEGER}, #{userProductComboId,jdbcType=INTEGER}, 
      #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.bosenkeji.vo.tradeplatform.TradePlatformApiBindProductCombo">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into trade_platform_api_bind_product_combo
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="tradePlatformApiId != null">
        trade_platform_api_id,
      </if>
      <if test="userProductComboId != null">
        user_product_combo_id,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="tradePlatformApiId != null">
        #{tradePlatformApiId,jdbcType=INTEGER},
      </if>
      <if test="userProductComboId != null">
        #{userProductComboId,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.bosenkeji.vo.tradeplatform.TradePlatformApiBindProductCombo">
    update trade_platform_api_bind_product_combo
    <set>
      <if test="userId != 0">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="tradePlatformApiId != 0">
        trade_platform_api_id = #{tradePlatformApiId,jdbcType=INTEGER},
      </if>
      <if test="userProductComboId != 0">
        user_product_combo_id = #{userProductComboId,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateApiIdByPrimaryKey" parameterType="java.lang.Integer" >
    update trade_platform_api_bind_product_combo set trade_platform_api_id=#{param2} where id=#{param1}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.bosenkeji.vo.tradeplatform.TradePlatformApiBindProductCombo">
    update trade_platform_api_bind_product_combo
    set user_id = #{userId,jdbcType=INTEGER},
      trade_platform_api_id = #{tradePlatformApiId,jdbcType=INTEGER},
      user_product_combo_id = #{userProductComboId,jdbcType=INTEGER},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="updateApiByPrimaryKey" parameterType="cn.bosenkeji.vo.tradeplatform.TradePlatformApiBindProductCombo" >
    update trade_platform_api_bind_product_combo
    set trade_platform_api_id = #{tradePlatformApiId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="findByUserId" parameterType="java.lang.Integer" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from
    trade_platform_api_bind_product_combo
    where user_id=#{userId}

  </select>

  <select id="selectApiIdsByUserId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    select trade_platform_api_id from trade_platform_api_bind_product_combo
    where user_id=#{userId}
  </select>

  <select id="selectComboIdsByUserId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    select user_product_combo_id from trade_platform_api_bind_product_combo
    where user_id=#{userId}
  </select>


  <!-- 同理 此处查询是否存在没有绑定的api  ，当存在 api还没绑定时才能执行 绑定的添加或更新操作  -->
  <select id="checkExistNotBindApiByUserIdAndTradePlatformApiId" resultType="java.lang.Integer">
    select exists
    (select 1 from trade_platform_api_bind_product_combo
    where user_id=#{param1}
    and trade_platform_api_id=#{param2}
    limit 1
    )

  </select>

  <select id="checkExistByUserIdAndId" resultType="java.lang.Integer" >
    select exists
    (
    select 1
    from trade_platform_api_bind_product_combo
    where id=#{param2}
    and user_id=#{param1}
    );
  </select>

  <select id="getByUserIdAndComboId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select
    <include refid="Base_Column_List"></include>
    from trade_platform_api_bind_product_combo
    where user_id=#{param1}
    and user_product_combo_id=#{param2}
  </select>

  <select id="checkExistByComboId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    select exists (
    select 1 from trade_platform_api_bind_product_combo
    where user_product_combo_id = #{userProductComboId,jdbcType=INTEGER}
    limit 1
    )
  </select>

  <select id="findAll" resultMap="NoApiResultMap" >
    select <include refid="Base_Column_List"></include> from
    trade_platform_api_bind_product_combo
  </select>

</mapper>